
service: profiles


provider:
  name: aws
  runtime: nodejs4.3
  region: us-west-2
  environment:
    USER_TABLE: USER-${opt:stage, self:provider.stage}
    PROVIDER_TABLE: PROVIDER-${opt:stage, self:provider.stage}
    CHILDREN_TABLE: CHILDREN3-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:*"


functions:

#----------------- Users -----------------------
  usersList: # Function name
    handler: users/handler.list # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: /api/users
          method: get
          cors: true
  userGet:
    handler: users/handler.get # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: api/user/{id}
          method: get
          cors: true
  userCreate:
    handler: users/handler.create # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: api/user/create
          method: post
          cors: true
  userDelete:
    handler: users/handler.delete # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: api/user/{id}
          method: delete
          cors: true

#--------------------- Providers -------------------------
  providersList: # Function name
    handler: providers/handler.list # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: /api/providers
          method: get
          cors: true
  providerGet:
    handler: providers/handler.get # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: api/providers/{id}
          method: get
          cors: true
  providerCreate:
    handler: providers/handler.create # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: api/providers/create
          method: post
          cors: true
  providerDelete:
    handler: providers/handler.delete # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: api/providers/{id}
          method: delete
          cors: true

#--------------------- Children -------------------------
  childrenList: # Function name
    handler: children/handler.list # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: /api/children/{id}
          method: get
          cors: true
  childGet:
    handler: children/handler.get # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: api/child/{id}
          method: get
          cors: true
  childCreate:
    handler: children/handler.create # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: api/child/create
          method: post
          cors: true
  childDelete:
    handler: children/handler.delete # Reference to file handler.js & exported function 'users'
    events: # All events associated with this function
      - http:
          path: api/child/{id}
          method: delete
          cors: true

resources:
  Resources:
    UserDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USER_TABLE}
    ProviderDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PROVIDER_TABLE}
    ChildrenDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.CHILDREN_TABLE}